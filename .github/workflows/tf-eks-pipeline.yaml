name: TF-EKS pipeline
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-Latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      
    - name: AWS CLI configure
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Verify AWS Identity
      run: |
        aws sts get-caller-identity
        aws ecr describe-repositories --region ${{secrets.AWS_REGION}} || echo "ECR access test failed"
    
    # Log in to AWS ECR using Docker
    - name: Docker Login
      run: aws ecr get-login-password --region=${{secrets.AWS_REGION}} | docker login --username AWS --password-stdin ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com
    
    # Build and push the backend Docker image to ECR
    - name: Build and Push Backend Docker Image
      run: |
        docker build -t ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/backend_repo:latest ./backend
        docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/backend_repo:latest
    
    # Build and push the frontend Docker image to ECR
    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/frontend_repo:latest ./frontend
        docker push ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/frontend_repo:latest
    
    # Install kubectl for interacting with Kubernetes clusters
    - name: Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    # Install Helm for managing Kubernetes applications
    - name: Setup Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    # Update kubeconfig to access the EKS cluster
    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{secrets.EKS_CLUSTER_NAME}} --region ${{secrets.AWS_REGION}}
    - name: Deploy Helm chart
      run: |
        helm upgrade --install aws-eks-terraform-cicd-pipeline ./helm-chart \
        --namespace prod
